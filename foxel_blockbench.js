(function() {function _array_like_to_array(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _instanceof(left,right){if(right!=null&&typeof Symbol!=="undefined"&&right[Symbol.hasInstance]){return!!right[Symbol.hasInstance](left)}else{return left instanceof right}}function _iterable_to_array_limit(arr,i){var _i=arr==null?null:typeof Symbol!=="undefined"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i["return"]!=null)_i["return"]()}finally{if(_d)throw _e}}return _arr}function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(!o)return;if(typeof o==="string")return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}var version="0.1.0";var deletables=[];function degToRad(degrees){return degrees*(Math.PI/180)}function eulerToQuaternion(euler){var _euler_map_map=_sliced_to_array(euler.map(degToRad).map(function(it){return-it}),3),roll=_euler_map_map[0],pitch=_euler_map_map[1],yaw=_euler_map_map[2];var cy=Math.cos(yaw*.5);var sy=Math.sin(yaw*.5);var cp=Math.cos(pitch*.5);var sp=Math.sin(pitch*.5);var cr=Math.cos(roll*.5);var sr=Math.sin(roll*.5);var w=cr*cp*cy+sr*sp*sy;var x=sr*cp*cy-cr*sp*sy;var y=cr*sp*cy+sr*cp*sy;var z=cr*cp*sy-sr*sp*cy;return[x,y,z,w]}function scaleDownVec3(vec){return[vec[0]/16,vec[1]/16,vec[2]/16]}function scaleDownUv(uv,textureUuid){if(textureUuid){var texture=Texture.all.filter(function(it){return it.uuid==textureUuid})[0];var width=texture.uv_width;var height=texture.uv_height;return[uv[0]/width,uv[1]/height,uv[2]/width,uv[3]/height]}return[uv[0]/16,uv[1]/16,uv[2]/16,uv[3]/16]}function cullFace(face){return face==""?"none":face}function size(from,to){return[to[0]-from[0],to[1]-from[1],to[2]-from[2]]}function getTextureName(textureUuid){if(!textureUuid)return"all";return Texture.all.filter(function(it){return it.uuid==textureUuid})[0].name}Group.prototype.needsUniqueName,Cube.prototype.needsUniqueName;function pluginLoad(){Language.addTranslations("en",{"action.foxel_export":"Foxel Engine Model"});var format=new ModelFormat({name:"Foxel Engine Model",id:"foxel",icon:"bar_chart",animated_textures:false,show_on_start_screen:true,box_uv:false,optional_box_uv:true,single_texture:false,per_texture_uv_size:true,meshes:false,rotate_cubes:true,stretch_cubes:false,centered_grid:false,locators:true,java_face_properties:true,model_identifier:true,legacy_editable_file_name:true,texture_folder:true,bone_rig:true});deletables.push(format);var codec=new Codec("foxel_model",{name:"Foxel Model",extension:"json",remember:false,compile:function compile(){function createPart(node){if(_instanceof(node,Cube))return{type:"cube",name:node.name,position:scaleDownVec3(node.from),size:scaleDownVec3(size(node.from,node.to)),pivot:scaleDownVec3(node.origin),rotation:eulerToQuaternion(node.rotation),sides:{north:{culling_side:cullFace(node.faces.north.cullface),texture:getTextureName(node.faces.north.texture),uv:scaleDownUv(node.faces.north.uv,node.faces.north.texture||undefined)},south:{culling_side:cullFace(node.faces.south.cullface),texture:getTextureName(node.faces.south.texture),uv:scaleDownUv(node.faces.south.uv,node.faces.south.texture||undefined)},east:{culling_side:cullFace(node.faces.east.cullface),texture:getTextureName(node.faces.east.texture),uv:scaleDownUv(node.faces.east.uv,node.faces.east.texture||undefined)},west:{culling_side:cullFace(node.faces.west.cullface),texture:getTextureName(node.faces.west.texture),uv:scaleDownUv(node.faces.west.uv,node.faces.west.texture||undefined)},up:{culling_side:cullFace(node.faces.up.cullface),texture:getTextureName(node.faces.up.texture),uv:scaleDownUv(node.faces.up.uv,node.faces.up.texture||undefined)},down:{culling_side:cullFace(node.faces.down.cullface),texture:getTextureName(node.faces.down.texture),uv:scaleDownUv(node.faces.down.uv,node.faces.down.texture||undefined)}}};if(_instanceof(node,Group))return{type:"list",name:node.name,position:[0,0,0],size:[1,1,1],pivot:scaleDownVec3(node.origin),rotation:eulerToQuaternion(node.rotation),parts:node.children.map(createPart)};return{}}var model={type:"list",name:"root",position:[0,0,0],size:[1,1,1],pivot:[.5,.5,.5],rotation:[0,0,0,1],parts:Outliner.root.map(createPart)};var textures={};Texture.all.forEach(function(it){textures[it.name]="".concat(it.namespace,":").concat(it.folder?it.folder+"/":"").concat(it.name)});var root={textures:textures,model:model};return JSON.stringify(root,null,4)}});deletables.push(codec);var exportAction=new Action("foxel_export",{icon:"bar_chart",click:function click(){codec.export()}});MenuBar.addAction(exportAction,"file.export.0");deletables.push(exportAction);var check=new ValidatorCheck("foxel_check",{update_triggers:["update_selection"],condition:{method:function(){return Format.id==format.id}},run:function run(){function process(nodes){var names=new Set;var _iteratorNormalCompletion=true,_didIteratorError=false,_iteratorError=undefined;try{for(var _iterator=nodes[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var node=_step.value;while(names.has(node.name))node.name=node.name+"_";names.add(node.name);if(_instanceof(node,Group))process(node.children)}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}process(Outliner.root)}});deletables.push(check)}function pluginUnload(){deletables.forEach(function(it){return it.delete()})}BBPlugin.register("foxel_blockbench",{title:"Foxel Blockbench",author:"Foxel Developers",description:"Blockbench plugin for the Foxel engine",icon:"bar_chart",variant:"both",version:version,onload:pluginLoad,onunload:pluginUnload});})();